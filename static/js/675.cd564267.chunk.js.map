{"version":3,"file":"static/js/675.cd564267.chunk.js","mappings":"sSA4DA,EAnDqB,WACnB,IAAAA,GAA0CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CI,EAAaF,EAAA,GAAEG,EAAgBH,EAAA,IAEtCI,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EACGC,IAAI,4CACJC,MAAK,SAACC,GACLL,EAAiBK,EAASC,KAC5B,IACCC,OAAM,SAACC,GACNC,QAAQD,MAAM,gCAAiCA,EACjD,GACJ,GAAG,IAEH,IAAME,EAAa,IAAIC,IAAAA,MAAO,CAC5BC,Q,67DACAC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,IACjBC,YAAa,CAAC,GAAI,IAClBC,WAAY,CAAC,GAAI,MAGnB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,GAAI,CAAEC,GAAI,GAAKC,SAAS,KAAIC,SAAA,EACrCC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAIH,SAAC,SACzBL,EAAAA,EAAAA,MAACS,EAAAA,EAAY,CAACC,OAAQ,CAAC,GAAI,GAAIC,KAAM,EAAGC,MAAO,CAAEC,OAAQ,SAAUR,SAAA,EACjEC,EAAAA,EAAAA,KAACQ,EAAAA,EAAS,CACRC,IAAI,qDACJC,YAAY,0FAEblC,EAAcmC,KAAI,SAACC,GAAO,OACzBZ,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CAELC,SAAU,CAACF,EAAQG,YAAYC,IAAKJ,EAAQG,YAAYE,MACxDC,KAAM/B,EAAWY,UAEjBC,EAAAA,EAAAA,KAACmB,EAAAA,EAAK,CAAApB,UACJL,EAAAA,EAAAA,MAAA,OAAAK,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKa,EAAQA,WACblB,EAAAA,EAAAA,MAAA,KAAAK,SAAA,CAAG,gBAAca,EAAQQ,UACzB1B,EAAAA,EAAAA,MAAA,KAAAK,SAAA,CAAG,iBAAea,EAAQS,WAC1B3B,EAAAA,EAAAA,MAAA,KAAAK,SAAA,CAAG,oBAAkBa,EAAQU,mBAT5BV,EAAQG,YAAYQ,IAYlB,SAKnB,C","sources":["Components/MapComponent.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport axios from \"axios\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport pin from \"../Assets/img/marker-icon.png\";\nimport \"leaflet/dist/leaflet.css\";\n\nconst MapComponent = () => {\n  const [countriesData, setCountriesData] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\"https://disease.sh/v3/covid-19/countries\")\n      .then((response) => {\n        setCountriesData(response.data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching COVID-19 data:\", error);\n      });\n  }, []);\n\n  const customIcon = new L.Icon({\n    iconUrl: pin,\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n    popupAnchor: [1, -34],\n    shadowSize: [41, 41],\n  });\n\n  return (\n    <Container sx={{ py: 2 }} maxWidth=\"md\">\n      <Typography variant=\"h4\">Map</Typography>\n      <MapContainer center={[20, 0]} zoom={2} style={{ height: \"500px\" }}>\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        {countriesData.map((country) => (\n          <Marker\n            key={country.countryInfo._id}\n            position={[country.countryInfo.lat, country.countryInfo.long]}\n            icon={customIcon}\n          >\n            <Popup>\n              <div>\n                <h2>{country.country}</h2>\n                <p>Total Cases: {country.cases}</p>\n                <p>Total Deaths: {country.deaths}</p>\n                <p>Total Recovered: {country.recovered}</p>\n              </div>\n            </Popup>\n          </Marker>\n        ))}\n      </MapContainer>\n    </Container>\n  );\n};\n\nexport default MapComponent;\n"],"names":["_useState","useState","_useState2","_slicedToArray","countriesData","setCountriesData","useEffect","axios","get","then","response","data","catch","error","console","customIcon","L","iconUrl","iconSize","iconAnchor","popupAnchor","shadowSize","_jsxs","Container","sx","py","maxWidth","children","_jsx","Typography","variant","MapContainer","center","zoom","style","height","TileLayer","url","attribution","map","country","Marker","position","countryInfo","lat","long","icon","Popup","cases","deaths","recovered","_id"],"sourceRoot":""}